{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1Ego0HS2gcutrFjGSs43I0obPb_dzR-Ri","timestamp":1658790161646}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["\n","\n","**About our dataset:**\n","  \n","  161 pregnancies were followed from a 2019 study (by Imperial College London Hospitals) of which 64 pregnanies resulted in1st trimester miscarriage, 14 pregnancies in 2nd trimester miscarriage, and 83 pregnancies in full term pregnancies. From these women, a vaginal swab was collected during the first trimester, which was processed to extract all bacterial DNA, which was then sequenced and analyzed using BLAST to gauge the relative abundances of different bacteria.\n","If you're interested, you can read more here: https://obgyn.onlinelibrary.wiley.com/doi/pdf/10.1111/1471-0528.15972\n","\n","Your data is all cleaned up and ready for you [here](https://drive.google.com/drive/folders/1BRSEBaqQ42DVHLMkZfP1ANg7AceutWP3?usp=sharing). However, our data will not always be clean and ready, so we are going to teach you about the importance of having high-quality data using another toy dataset."],"metadata":{"id":"hob4Yj44ZIYJ"}},{"cell_type":"code","source":["# package import block:\n","import sklearn\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.decomposition import PCA\n","# ignore warnings\n","import warnings\n","from sklearn.exceptions import DataConversionWarning\n","warnings.filterwarnings(action='ignore', category=DataConversionWarning)"],"metadata":{"id":"CxHRqIcCTRWl"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# **Data Cleaning**"],"metadata":{"id":"T6BRqzdpQbjI"}},{"cell_type":"markdown","source":["Most data you recieve will not be always be consistently formatted and complete. It is important to ensure that the data used in your models is accurate, properly formatted and complete.\n","\n","\n","\n","**Task**:\n","\n","  You have two files in the \"Data Cleaning\" folder ([link](https://drive.google.com/drive/folders/1BRSEBaqQ42DVHLMkZfP1ANg7AceutWP3?usp=sharing)), and we want you to check whether they're \"clean\" (good quality) or not.\n","\n","  These two files contain sequences of bacterial DNA from sewage in St. Louis: one has good-quality sequences, the other bad-quality sequences. Before trying to run them through BLASTn (online tool that can take DNA sequences and find which bacteria it came from), we have to check the quality of the files.\n","\n","  \n","  The software we use to run the quality check is called \"[FastQC](https://www.hadriengourle.com/tutorials/qc/)\". After running FastQC on each fastq file (that contains your sequences), you can read a report about each of your files, that tells you about your data quality.\n","\n","  Here is a sample report from a [good](https://www.hadriengourle.com/tutorials/data/fastqc/SRR957824_500K_R1_fastqc.html) quality sample, and a [bad](https://www.hadriengourle.com/tutorials/data/fastqc/SRR957824_500K_R2_fastqc.html) quality sample.\n","\n","  Look at both of them, then answer these questions:\n"],"metadata":{"id":"jzf3RN_8R8_n"}},{"cell_type":"code","source":["!grep -c \">\" /content/sample_patient_2.fasta"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y9_5TeMGBWwX","executionInfo":{"status":"ok","timestamp":1689801629585,"user_tz":420,"elapsed":354,"user":{"displayName":"Leen Raed Khaled Arnaout","userId":"02583682473657331212"}},"outputId":"c8128a69-ba28-4076-da61-0f778e7285f6"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["153\n"]}]},{"cell_type":"markdown","source":["**Questions:**\n","\n","    1. Did all files run smoothly?\n","    2. Which file is higher quality? Why?\n","    3. Why do you think the quality of the reads depends on the position in the DNA sequence? Why does the quality drop near the end of the sequences?"],"metadata":{"id":"F65o8ipueDJJ"}},{"cell_type":"markdown","source":["Now, you're ready to do part 2 of data cleanup: alignment!\n","\n","You have all of your DNA sequence files, now you want to know which bacteria your sequences came from. For that, you use BLASTn (Basic Local Sequence Alignment Tool) that takes your DNA sequences, compares them with sequences from the genomes of thousands of organisms, and tells you which one your sequence most likely came from! Neat, huh?\n","\n","Now, you have 4 fasta (sequence) files in your \"Data Cleaning\" folder. Run [BLASTn](https://blast.ncbi.nlm.nih.gov/Blast.cgi?PROGRAM=blastn&BLAST_SPEC=GeoBlast&PAGE_TYPE=BlastSearch) on all of them, then answer the questions below.\n","\n","To run BLAST, simply upload your fasta files and click \"BLAST!\""],"metadata":{"id":"cSDznEtUebdB"}},{"cell_type":"markdown","source":["**Questions:**\n","\n","    1. Did all files run smoothly?\n","    2. What issues have you encountered?\n","    3. What should be done to with the files/patients whose files did not converge?"],"metadata":{"id":"w_bABnw4M7rv"}},{"cell_type":"markdown","source":["# **Understanding Your Dataset**"],"metadata":{"id":"rpELXqGIR7dE"}},{"cell_type":"markdown","source":["[Here](https://drive.google.com/drive/folders/1BRSEBaqQ42DVHLMkZfP1ANg7AceutWP3?usp=sharing) we've provided you with the dataset you'll be using for your project:\n","\n","*   a set of all bacterial abundances from all 161 patients in csv format (each file's name is the patient's codename)\n","*   1 metadata csv file containing the codename for each patient and whether they had a successful pregnancy or a miscarriage in 1st / 2nd trimester.\n","\n","You will find the corresponding files in the \"Alignments\" and \"Metadata\" folder both within the \"Model Building\" folder.\n","\n","We suggest opening up some of the bacterial abundances csv's, and understanding what the data looks like, so that you can do your machine learning well!\n","\n","Now, let's do some data visualization exercises to help you understand the data!\n","\n","\n","**Task:**\n","\n","Let's start building our models!\n","\n","We'll be building models to predict whether or not a pregnancy goes to term based on an individual's vaginal microbiome.\n","\n","*To Do:*\n","\n","1. Format your output\n","2. Choose your ML algorithms\n","  - Supervised:\n","    - Logistic Regression\n","    - Random Forest\n","    - Perceptron\n","    - K-Nearest Neighbors\n","  - Unsupervised:\n","    - K-Means Clustering\n","3. Train your models and experiment with different data splitting techniques\n","  - Traditional test-train split\n","  - K-fold cross validations\n","  - Stratified train-test split\n","4. Evaluate your models\n","\n","\n","\n","\n"],"metadata":{"id":"XhEAUMW0d6_0"}},{"cell_type":"markdown","source":["EXERCISE: make a bar chart of the types of pregnancy (successful, 1st trimester miscarriage, 2nd trimester miscarriage) and how many patients had each. (hint: use the metadata .csv)"],"metadata":{"id":"t5n9NxjjPem4"}},{"cell_type":"markdown","source":["EXERCISE: make a chart of the relative abundance of the bacteria in 3 patient samples of your choice. You can have three separate bar charts (one for each patient). Or, you can make a pie chart for each patient."],"metadata":{"id":"Vx3TepYqPsyZ"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"TUwljG2F_84S","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658790199146,"user_tz":420,"elapsed":18663,"user":{"displayName":"Leen Raed Khaled Arnaout","userId":"02583682473657331212"}},"outputId":"cf3119a1-59ea-4945-f0fb-bfdde90e880c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["import plotly.express as px\n","import numpy as np\n","import pandas as pd\n","from sklearn.decomposition import PCA\n","\n","df = pd.read_csv('/content/drive/MyDrive/AI4ALL_miscarriage_project/fixed_data.csv', index_col = 0)\n","\n","pca = PCA()\n","# TODO: Run PCA on X to get the first 2 principal components\n","# use .fit_transform()\n","X_pca = pca.fit_transform(df)\n","print(X_pca)\n","print(X_pca.shape)\n","exp_var_cumul = np.cumsum(pca.explained_variance_ratio_)\n","\n","px.area(\n","    x=range(1, exp_var_cumul.shape[0] + 1),\n","    y=exp_var_cumul,\n","    labels={\"x\": \"# Components\", \"y\": \"Explained Variance\"}\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":796},"id":"lCvdqinSmdDl","executionInfo":{"status":"ok","timestamp":1658790716117,"user_tz":420,"elapsed":503,"user":{"displayName":"Leen Raed Khaled Arnaout","userId":"02583682473657331212"}},"outputId":"6645e87d-0cd3-4d5a-e72e-51ae8cfeb719"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 6.31023563e-01  4.20810481e-01 -7.35248926e-02 ... -3.58693885e-08\n","   1.56378396e-08  2.97503723e-17]\n"," [-2.00710411e-01 -5.00850684e-03 -3.89766342e-03 ...  3.98806814e-08\n","   8.89322696e-08  2.97503723e-17]\n"," [-1.86737454e-01 -4.39656077e-03 -2.52903186e-03 ... -4.63240590e-08\n","  -5.21979819e-08  2.97503723e-17]\n"," ...\n"," [-2.01760081e-01 -4.90274769e-03 -4.03863604e-03 ... -1.52611371e-08\n","  -2.34363566e-08  2.97503723e-17]\n"," [-1.89800223e-01 -5.68147748e-03 -3.83838749e-03 ...  1.06182806e-06\n","  -3.24842377e-07  2.97503723e-17]\n"," [-2.00739551e-01 -4.89015057e-03 -3.88858112e-03 ... -2.19995643e-08\n","  -1.80038987e-08  2.97503723e-17]]\n","(158, 158)\n"]},{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"be0cd163-6357-43f9-9ee2-25166eb90e3b\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"be0cd163-6357-43f9-9ee2-25166eb90e3b\")) {                    Plotly.newPlot(                        \"be0cd163-6357-43f9-9ee2-25166eb90e3b\",                        [{\"hovertemplate\":\"# Components=%{x}<br>Explained Variance=%{y}<extra></extra>\",\"legendgroup\":\"\",\"line\":{\"color\":\"#636efa\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"stackgroup\":\"1\",\"x\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158],\"xaxis\":\"x\",\"y\":[0.8098650094138216,0.8951979214110243,0.9354603140614798,0.956859239386955,0.9694340074782883,0.9812673089430036,0.9865405338531836,0.991358409272656,0.9938112418394363,0.9954901596708415,0.9967014987024514,0.9977913968811591,0.9984229531055612,0.9987046570444997,0.9989789272428937,0.9991971194076406,0.9993854968904877,0.9995586842317256,0.9996826885045215,0.9997538068072291,0.9997974593909578,0.999835407116131,0.9998675752895017,0.9998910056871197,0.9999115589496439,0.9999301121396743,0.9999437160289782,0.9999561847300559,0.9999642172100013,0.9999715062666801,0.9999770496805073,0.9999824198272564,0.9999861728204228,0.9999884640619495,0.9999904985590105,0.9999921915614618,0.9999937280207587,0.9999951313837838,0.9999964746103118,0.9999974549841313,0.9999981611630803,0.9999985815965148,0.9999988535303412,0.9999990936930583,0.9999992865265434,0.9999994241475624,0.9999995291579176,0.9999996040724816,0.9999996695627347,0.9999997201938597,0.9999997691927871,0.9999998118141825,0.9999998387377683,0.9999998653927585,0.9999998865577326,0.9999999021948627,0.9999999154303826,0.9999999277770298,0.999999936873648,0.9999999436819104,0.9999999498024731,0.999999954758508,0.9999999595911645,0.9999999642768171,0.9999999681256031,0.9999999711822406,0.9999999741162249,0.9999999766631151,0.999999978863573,0.9999999807086055,0.9999999823169553,0.9999999837268032,0.9999999850065819,0.9999999862218079,0.9999999872919089,0.999999988219676,0.9999999890551032,0.9999999897842621,0.999999990468482,0.999999991065064,0.9999999916258456,0.9999999921763251,0.9999999926996506,0.9999999931728158,0.9999999936079871,0.999999994017744,0.9999999944039453,0.9999999947596138,0.9999999950969087,0.9999999953935298,0.9999999956693462,0.9999999959277107,0.9999999961849322,0.9999999964140271,0.9999999966242226,0.9999999968095891,0.999999996989521,0.9999999971643178,0.99999999731995,0.9999999974650091,0.9999999976013922,0.999999997728129,0.9999999978497155,0.9999999979679249,0.9999999980844857,0.9999999981970588,0.9999999983054163,0.999999998407366,0.9999999985077909,0.999999998601714,0.9999999986917949,0.999999998774774,0.9999999988529741,0.9999999989226013,0.9999999989909382,0.9999999990585153,0.9999999991241068,0.9999999991864497,0.9999999992475356,0.9999999993025308,0.9999999993528764,0.9999999994014073,0.9999999994460821,0.9999999994893617,0.9999999995310717,0.9999999995719966,0.9999999996089326,0.9999999996452279,0.9999999996803108,0.9999999997119737,0.9999999997402218,0.9999999997654648,0.9999999997893371,0.9999999998117219,0.9999999998320316,0.9999999998504928,0.999999999868372,0.9999999998832593,0.9999999998968108,0.9999999999099345,0.9999999999228163,0.99999999993419,0.9999999999446254,0.9999999999543848,0.9999999999630457,0.9999999999708714,0.9999999999771461,0.9999999999829486,0.9999999999864894,0.9999999999896108,0.9999999999921277,0.9999999999943663,0.999999999996005,0.9999999999973781,0.9999999999983853,0.9999999999992554,1.0000000000000002,1.0000000000000002],\"yaxis\":\"y\",\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"# Components\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Explained Variance\"}},\"legend\":{\"tracegroupgap\":0},\"margin\":{\"t\":60}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('be0cd163-6357-43f9-9ee2-25166eb90e3b');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":["# plot PC1 vs PC2\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","plt.figure(figsize=(10,10))\n","sns.scatterplot(\n","    x=X_pca[:,0], y=X_pca[:,1],\n","    palette=sns.color_palette(\"hls\", 10),\n","    legend=\"full\",\n","    alpha=0.75)\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":592},"id":"Smge55NPnqY8","executionInfo":{"status":"ok","timestamp":1658790590460,"user_tz":420,"elapsed":676,"user":{"displayName":"Leen Raed Khaled Arnaout","userId":"02583682473657331212"}},"outputId":"92fb4111-1f3e-4fe9-d791-2cec427ec8f0"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# Model Building"],"metadata":{"id":"LhqBiNuuUgig"}},{"cell_type":"markdown","source":["\n","Now that you understand your data better, let's build our models!\n","\n","We'll be building models to predict whether or not a pregnancy goes to term based on an individual's vaginal microbiome.\n","\n","\n","## *To Do:*\n","\n","1. Format your output\n","  - you're doing binary classification (**successful pregnancy**, vs **miscarriage**)\n","2. Choose your ML algorithms\n","  - Supervised: (choose two of these)\n","    - [Logistic Regression](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html?highlight=logistic%20regression#sklearn.linear_model.LogisticRegression)\n","    - [Random Forest](https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html?highlight=random%20forest#sklearn.ensemble.RandomForestClassifier) / [Decision Tree](https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html?highlight=decision%20tree#sklearn.tree.DecisionTreeClassifier)\n","    - [Perceptron](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Perceptron.html)\n","    - [K-Nearest Neighbors](https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html)\n","  - Unsupervised:\n","    - [K-Means Clustering](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html)\n","3. Experiment with different data splitting techniques\n","  - Traditional [test-train split](https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html)\n","  - [K-fold cross validation](https://scikit-learn.org/stable/modules/cross_validation.html)\n","  - Stratified train-test split (we learned this on Thursday)\n","3. Train your model\n","4. Evaluate your models\n","  - we want to see the \"accuracy\" value for all of your combinations, and if you want to show us a confusion matrix too, that would be cool with us!\n","\n"],"metadata":{"id":"4tmKCdGxN5km"}},{"cell_type":"markdown","source":["To help you, here we copied a block of code that we have done together on Thursday that explains the steps of how we implement a machine learning algorithm:\n","\n"],"metadata":{"id":"uCyYBoBGSK9a"}},{"cell_type":"code","source":["X = pd.read_csv()\n","\n","# Carry out PCA on X\n","\n","pca = PCA(n_components=2)\n","# TODO: Run PCA on X to get the first 2 principal components\n","# use .fit_transform()\n","X_pca = pca.fit_transform(X)"],"metadata":{"id":"30mx8wIRlnna"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# import your classifier\n","from sklearn.tree import DecisionTreeClassifier\n","\n","# do your train-test split (here you can do the stratified, normal or k-fold cross-validation)\n","\n","data = pd.read_csv(\"metadata.csv\",index_col=0)\n","\n","X_train, X_test, y_train, y_test = train_test_split(data,phenos,\n","                                                    stratify=phenos,\n","                                                    test_size=0.3,\n","                                                    random_state=35,)\n","\n","# here you build your classifier\n","classifier = DecisionTreeClassifier(max_depth=5,random_state=35)\n","# train your classifier\n","classifier = classifier.fit(X_train, y_train)\n","# test your classifier and output an accuracy score\n","y_predict = classifier.predict(X_test)\n","classifier.score(X_test, y_test)"],"metadata":{"id":"IH8GtPlZThAJ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Again, remember: if you're ever confused, refer to the DOCUMENTATION! In the list above, click on each concept to go to its documentation page in Scikit Learn :)"],"metadata":{"id":"tSK3pX4_Vqje"}},{"cell_type":"markdown","source":["# Do your Machine Learning here!\n"],"metadata":{"id":"8hF3kYNBUKI-"}},{"cell_type":"markdown","source":["Here is an import block, run this before you start doing your machine learning:"],"metadata":{"id":"2VkKYJpmUF2K"}},{"cell_type":"code","source":["# code import block\n","%matplotlib inline\n","import sklearn\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.model_selection import train_test_split\n","\n","# We're going to import the decision tree classifier\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn import tree\n","import graphviz\n","\n","# we're going to import Random Forest classifier:\n","from sklearn.ensemble import RandomForestClassifier\n","\n","# we're going to import logistic regression:\n","from sklearn.linear_model import LogisticRegression\n","from sklearn import metrics\n","\n","# we're going to import perceptron:\n","from sklearn.linear_model import Perceptron\n","\n","# we're going to import k-nearest neighbors classifier:\n","from sklearn.neighbors import KNeighborsClassifier\n","\n","# we're going to import k-means clustering:\n","from sklearn.cluster import KMeans\n","\n","from sklearn.metrics import confusion_matrix\n","\n","# ignore warnings\n","import warnings\n","from sklearn.exceptions import DataConversionWarning\n","warnings.filterwarnings(action='ignore', category=DataConversionWarning)"],"metadata":{"id":"cmm832DKSOUi"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Now, start working! and don't forget to write comments to tell us what you're trying to do with the code."],"metadata":{"id":"-BJYJKqmUWLp"}},{"cell_type":"code","source":["# your code here!"],"metadata":{"id":"cRrtmhEQUQcR"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# **Reflect**"],"metadata":{"id":"I9kLercUq9N3"}},{"cell_type":"markdown","source":["1. Comment in a few sentences on how low-quality vs high-quality (cleaned-up data) affects the alignment of the samples to the bacterial genomes (discovering what bacteria we have in the samples)\n","\n","2. What are the inputs and outputs of each of your machine learning models?\n","\n","3. What is the difference between the inputs of the supervised and unsupervised learning algorithms?\n","\n","4. Provide a table that summarizes the training and testing accuracy for all combinations of train-test split methods and ML algorithms used\n","\n","5. How did each of the train-test split methods affect the algorithms’ accuracy? Which method do you think is more reliable, and why?\n","\n","6. What do you think of the dataset’s structure? How could the dataset be improved for future machine learning applications?\n","\n","7. How generalizable is your final model?\n","\n","8. What do you think about this study’s design? Do you think that it reflects the diversity of people who can get pregnant? Do you think the sample size is enough?\n","\n","9. Think about how a study can be expanded to study pregnancy outcomes for different ethnic groups, knowing that this study and many others about microbiomes and pregnancy outcomes are focusing on white women. Why do you think this has been historically the case, and how can we challenge this?\n"],"metadata":{"id":"AfMEfqgVrBbD"}},{"cell_type":"markdown","source":["# **Extra Exploration**"],"metadata":{"id":"y38lZQG3rmPk"}},{"cell_type":"markdown","source":["Try the above experimentation with a 3-class ouput!(successful pregnancy, 1st trimester miscarriage, 2nd trimester mistarrage)\n","\n","- Comment on whether binary classification vs three-category classification algorithms performed better, and why you think so."],"metadata":{"id":"z7FJgTZ1ruka"}}]}